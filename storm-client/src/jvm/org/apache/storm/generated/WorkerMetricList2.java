/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.storm.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)")
public class WorkerMetricList2 implements org.apache.storm.thrift.TBase<WorkerMetricList2, WorkerMetricList2._Fields>, java.io.Serializable, Cloneable, Comparable<WorkerMetricList2> {
  private static final org.apache.storm.thrift.protocol.TStruct STRUCT_DESC = new org.apache.storm.thrift.protocol.TStruct("WorkerMetricList2");

  private static final org.apache.storm.thrift.protocol.TField METRICS_FIELD_DESC = new org.apache.storm.thrift.protocol.TField("metrics", org.apache.storm.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.storm.thrift.protocol.TField TIMESTAMP_MS_FIELD_DESC = new org.apache.storm.thrift.protocol.TField("timestampMs", org.apache.storm.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.storm.thrift.protocol.TField COMPONENT_ID_FIELD_DESC = new org.apache.storm.thrift.protocol.TField("componentId", org.apache.storm.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.storm.thrift.protocol.TField EXECUTOR_ID_FIELD_DESC = new org.apache.storm.thrift.protocol.TField("executorId", org.apache.storm.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.storm.thrift.protocol.TField EXTRA_CONTEXT_JSON_FIELD_DESC = new org.apache.storm.thrift.protocol.TField("extraContextJson", org.apache.storm.thrift.protocol.TType.STRING, (short)6);

  private static final org.apache.storm.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new WorkerMetricList2StandardSchemeFactory();
  private static final org.apache.storm.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new WorkerMetricList2TupleSchemeFactory();

  private @org.apache.storm.thrift.annotation.Nullable java.util.List<WorkerMetricPoint2> metrics; // required
  private long timestampMs; // required
  private @org.apache.storm.thrift.annotation.Nullable java.lang.String componentId; // required
  private @org.apache.storm.thrift.annotation.Nullable java.lang.String executorId; // required
  private @org.apache.storm.thrift.annotation.Nullable java.lang.String extraContextJson; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.storm.thrift.TFieldIdEnum {
    METRICS((short)1, "metrics"),
    TIMESTAMP_MS((short)2, "timestampMs"),
    COMPONENT_ID((short)4, "componentId"),
    EXECUTOR_ID((short)5, "executorId"),
    EXTRA_CONTEXT_JSON((short)6, "extraContextJson");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.storm.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // METRICS
          return METRICS;
        case 2: // TIMESTAMP_MS
          return TIMESTAMP_MS;
        case 4: // COMPONENT_ID
          return COMPONENT_ID;
        case 5: // EXECUTOR_ID
          return EXECUTOR_ID;
        case 6: // EXTRA_CONTEXT_JSON
          return EXTRA_CONTEXT_JSON;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.storm.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TIMESTAMPMS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.EXTRA_CONTEXT_JSON};
  public static final java.util.Map<_Fields, org.apache.storm.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.storm.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.storm.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.METRICS, new org.apache.storm.thrift.meta_data.FieldMetaData("metrics", org.apache.storm.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.storm.thrift.meta_data.ListMetaData(org.apache.storm.thrift.protocol.TType.LIST, 
            new org.apache.storm.thrift.meta_data.StructMetaData(org.apache.storm.thrift.protocol.TType.STRUCT, WorkerMetricPoint2.class))));
    tmpMap.put(_Fields.TIMESTAMP_MS, new org.apache.storm.thrift.meta_data.FieldMetaData("timestampMs", org.apache.storm.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.storm.thrift.meta_data.FieldValueMetaData(org.apache.storm.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.COMPONENT_ID, new org.apache.storm.thrift.meta_data.FieldMetaData("componentId", org.apache.storm.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.storm.thrift.meta_data.FieldValueMetaData(org.apache.storm.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXECUTOR_ID, new org.apache.storm.thrift.meta_data.FieldMetaData("executorId", org.apache.storm.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.storm.thrift.meta_data.FieldValueMetaData(org.apache.storm.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTRA_CONTEXT_JSON, new org.apache.storm.thrift.meta_data.FieldMetaData("extraContextJson", org.apache.storm.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.storm.thrift.meta_data.FieldValueMetaData(org.apache.storm.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.storm.thrift.meta_data.FieldMetaData.addStructMetaDataMap(WorkerMetricList2.class, metaDataMap);
  }

  public WorkerMetricList2() {
  }

  public WorkerMetricList2(
    java.util.List<WorkerMetricPoint2> metrics,
    long timestampMs,
    java.lang.String componentId,
    java.lang.String executorId)
  {
    this();
    this.metrics = metrics;
    this.timestampMs = timestampMs;
    set_timestampMs_isSet(true);
    this.componentId = componentId;
    this.executorId = executorId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public WorkerMetricList2(WorkerMetricList2 other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.is_set_metrics()) {
      java.util.List<WorkerMetricPoint2> __this__metrics = new java.util.ArrayList<WorkerMetricPoint2>(other.metrics.size());
      for (WorkerMetricPoint2 other_element : other.metrics) {
        __this__metrics.add(new WorkerMetricPoint2(other_element));
      }
      this.metrics = __this__metrics;
    }
    this.timestampMs = other.timestampMs;
    if (other.is_set_componentId()) {
      this.componentId = other.componentId;
    }
    if (other.is_set_executorId()) {
      this.executorId = other.executorId;
    }
    if (other.is_set_extraContextJson()) {
      this.extraContextJson = other.extraContextJson;
    }
  }

  public WorkerMetricList2 deepCopy() {
    return new WorkerMetricList2(this);
  }

  @Override
  public void clear() {
    this.metrics = null;
    set_timestampMs_isSet(false);
    this.timestampMs = 0;
    this.componentId = null;
    this.executorId = null;
    this.extraContextJson = null;
  }

  public int get_metrics_size() {
    return (this.metrics == null) ? 0 : this.metrics.size();
  }

  @org.apache.storm.thrift.annotation.Nullable
  public java.util.Iterator<WorkerMetricPoint2> get_metrics_iterator() {
    return (this.metrics == null) ? null : this.metrics.iterator();
  }

  public void add_to_metrics(WorkerMetricPoint2 elem) {
    if (this.metrics == null) {
      this.metrics = new java.util.ArrayList<WorkerMetricPoint2>();
    }
    this.metrics.add(elem);
  }

  @org.apache.storm.thrift.annotation.Nullable
  public java.util.List<WorkerMetricPoint2> get_metrics() {
    return this.metrics;
  }

  public void set_metrics(@org.apache.storm.thrift.annotation.Nullable java.util.List<WorkerMetricPoint2> metrics) {
    this.metrics = metrics;
  }

  public void unset_metrics() {
    this.metrics = null;
  }

  /** Returns true if field metrics is set (has been assigned a value) and false otherwise */
  public boolean is_set_metrics() {
    return this.metrics != null;
  }

  public void set_metrics_isSet(boolean value) {
    if (!value) {
      this.metrics = null;
    }
  }

  public long get_timestampMs() {
    return this.timestampMs;
  }

  public void set_timestampMs(long timestampMs) {
    this.timestampMs = timestampMs;
    set_timestampMs_isSet(true);
  }

  public void unset_timestampMs() {
    __isset_bitfield = org.apache.storm.thrift.EncodingUtils.clearBit(__isset_bitfield, __TIMESTAMPMS_ISSET_ID);
  }

  /** Returns true if field timestampMs is set (has been assigned a value) and false otherwise */
  public boolean is_set_timestampMs() {
    return org.apache.storm.thrift.EncodingUtils.testBit(__isset_bitfield, __TIMESTAMPMS_ISSET_ID);
  }

  public void set_timestampMs_isSet(boolean value) {
    __isset_bitfield = org.apache.storm.thrift.EncodingUtils.setBit(__isset_bitfield, __TIMESTAMPMS_ISSET_ID, value);
  }

  @org.apache.storm.thrift.annotation.Nullable
  public java.lang.String get_componentId() {
    return this.componentId;
  }

  public void set_componentId(@org.apache.storm.thrift.annotation.Nullable java.lang.String componentId) {
    this.componentId = componentId;
  }

  public void unset_componentId() {
    this.componentId = null;
  }

  /** Returns true if field componentId is set (has been assigned a value) and false otherwise */
  public boolean is_set_componentId() {
    return this.componentId != null;
  }

  public void set_componentId_isSet(boolean value) {
    if (!value) {
      this.componentId = null;
    }
  }

  @org.apache.storm.thrift.annotation.Nullable
  public java.lang.String get_executorId() {
    return this.executorId;
  }

  public void set_executorId(@org.apache.storm.thrift.annotation.Nullable java.lang.String executorId) {
    this.executorId = executorId;
  }

  public void unset_executorId() {
    this.executorId = null;
  }

  /** Returns true if field executorId is set (has been assigned a value) and false otherwise */
  public boolean is_set_executorId() {
    return this.executorId != null;
  }

  public void set_executorId_isSet(boolean value) {
    if (!value) {
      this.executorId = null;
    }
  }

  @org.apache.storm.thrift.annotation.Nullable
  public java.lang.String get_extraContextJson() {
    return this.extraContextJson;
  }

  public void set_extraContextJson(@org.apache.storm.thrift.annotation.Nullable java.lang.String extraContextJson) {
    this.extraContextJson = extraContextJson;
  }

  public void unset_extraContextJson() {
    this.extraContextJson = null;
  }

  /** Returns true if field extraContextJson is set (has been assigned a value) and false otherwise */
  public boolean is_set_extraContextJson() {
    return this.extraContextJson != null;
  }

  public void set_extraContextJson_isSet(boolean value) {
    if (!value) {
      this.extraContextJson = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.storm.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case METRICS:
      if (value == null) {
        unset_metrics();
      } else {
        set_metrics((java.util.List<WorkerMetricPoint2>)value);
      }
      break;

    case TIMESTAMP_MS:
      if (value == null) {
        unset_timestampMs();
      } else {
        set_timestampMs((java.lang.Long)value);
      }
      break;

    case COMPONENT_ID:
      if (value == null) {
        unset_componentId();
      } else {
        set_componentId((java.lang.String)value);
      }
      break;

    case EXECUTOR_ID:
      if (value == null) {
        unset_executorId();
      } else {
        set_executorId((java.lang.String)value);
      }
      break;

    case EXTRA_CONTEXT_JSON:
      if (value == null) {
        unset_extraContextJson();
      } else {
        set_extraContextJson((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.storm.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case METRICS:
      return get_metrics();

    case TIMESTAMP_MS:
      return get_timestampMs();

    case COMPONENT_ID:
      return get_componentId();

    case EXECUTOR_ID:
      return get_executorId();

    case EXTRA_CONTEXT_JSON:
      return get_extraContextJson();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case METRICS:
      return is_set_metrics();
    case TIMESTAMP_MS:
      return is_set_timestampMs();
    case COMPONENT_ID:
      return is_set_componentId();
    case EXECUTOR_ID:
      return is_set_executorId();
    case EXTRA_CONTEXT_JSON:
      return is_set_extraContextJson();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof WorkerMetricList2)
      return this.equals((WorkerMetricList2)that);
    return false;
  }

  public boolean equals(WorkerMetricList2 that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_metrics = true && this.is_set_metrics();
    boolean that_present_metrics = true && that.is_set_metrics();
    if (this_present_metrics || that_present_metrics) {
      if (!(this_present_metrics && that_present_metrics))
        return false;
      if (!this.metrics.equals(that.metrics))
        return false;
    }

    boolean this_present_timestampMs = true;
    boolean that_present_timestampMs = true;
    if (this_present_timestampMs || that_present_timestampMs) {
      if (!(this_present_timestampMs && that_present_timestampMs))
        return false;
      if (this.timestampMs != that.timestampMs)
        return false;
    }

    boolean this_present_componentId = true && this.is_set_componentId();
    boolean that_present_componentId = true && that.is_set_componentId();
    if (this_present_componentId || that_present_componentId) {
      if (!(this_present_componentId && that_present_componentId))
        return false;
      if (!this.componentId.equals(that.componentId))
        return false;
    }

    boolean this_present_executorId = true && this.is_set_executorId();
    boolean that_present_executorId = true && that.is_set_executorId();
    if (this_present_executorId || that_present_executorId) {
      if (!(this_present_executorId && that_present_executorId))
        return false;
      if (!this.executorId.equals(that.executorId))
        return false;
    }

    boolean this_present_extraContextJson = true && this.is_set_extraContextJson();
    boolean that_present_extraContextJson = true && that.is_set_extraContextJson();
    if (this_present_extraContextJson || that_present_extraContextJson) {
      if (!(this_present_extraContextJson && that_present_extraContextJson))
        return false;
      if (!this.extraContextJson.equals(that.extraContextJson))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((is_set_metrics()) ? 131071 : 524287);
    if (is_set_metrics())
      hashCode = hashCode * 8191 + metrics.hashCode();

    hashCode = hashCode * 8191 + org.apache.storm.thrift.TBaseHelper.hashCode(timestampMs);

    hashCode = hashCode * 8191 + ((is_set_componentId()) ? 131071 : 524287);
    if (is_set_componentId())
      hashCode = hashCode * 8191 + componentId.hashCode();

    hashCode = hashCode * 8191 + ((is_set_executorId()) ? 131071 : 524287);
    if (is_set_executorId())
      hashCode = hashCode * 8191 + executorId.hashCode();

    hashCode = hashCode * 8191 + ((is_set_extraContextJson()) ? 131071 : 524287);
    if (is_set_extraContextJson())
      hashCode = hashCode * 8191 + extraContextJson.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(WorkerMetricList2 other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(is_set_metrics()).compareTo(other.is_set_metrics());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_metrics()) {
      lastComparison = org.apache.storm.thrift.TBaseHelper.compareTo(this.metrics, other.metrics);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(is_set_timestampMs()).compareTo(other.is_set_timestampMs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_timestampMs()) {
      lastComparison = org.apache.storm.thrift.TBaseHelper.compareTo(this.timestampMs, other.timestampMs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(is_set_componentId()).compareTo(other.is_set_componentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_componentId()) {
      lastComparison = org.apache.storm.thrift.TBaseHelper.compareTo(this.componentId, other.componentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(is_set_executorId()).compareTo(other.is_set_executorId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_executorId()) {
      lastComparison = org.apache.storm.thrift.TBaseHelper.compareTo(this.executorId, other.executorId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(is_set_extraContextJson()).compareTo(other.is_set_extraContextJson());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_extraContextJson()) {
      lastComparison = org.apache.storm.thrift.TBaseHelper.compareTo(this.extraContextJson, other.extraContextJson);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.storm.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.storm.thrift.protocol.TProtocol iprot) throws org.apache.storm.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.storm.thrift.protocol.TProtocol oprot) throws org.apache.storm.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("WorkerMetricList2(");
    boolean first = true;

    sb.append("metrics:");
    if (this.metrics == null) {
      sb.append("null");
    } else {
      sb.append(this.metrics);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("timestampMs:");
    sb.append(this.timestampMs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("componentId:");
    if (this.componentId == null) {
      sb.append("null");
    } else {
      sb.append(this.componentId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("executorId:");
    if (this.executorId == null) {
      sb.append("null");
    } else {
      sb.append(this.executorId);
    }
    first = false;
    if (is_set_extraContextJson()) {
      if (!first) sb.append(", ");
      sb.append("extraContextJson:");
      if (this.extraContextJson == null) {
        sb.append("null");
      } else {
        sb.append(this.extraContextJson);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.storm.thrift.TException {
    // check for required fields
    if (!is_set_timestampMs()) {
      throw new org.apache.storm.thrift.protocol.TProtocolException("Required field 'timestampMs' is unset! Struct:" + toString());
    }

    if (!is_set_componentId()) {
      throw new org.apache.storm.thrift.protocol.TProtocolException("Required field 'componentId' is unset! Struct:" + toString());
    }

    if (!is_set_executorId()) {
      throw new org.apache.storm.thrift.protocol.TProtocolException("Required field 'executorId' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.storm.thrift.protocol.TCompactProtocol(new org.apache.storm.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.storm.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.storm.thrift.protocol.TCompactProtocol(new org.apache.storm.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.storm.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WorkerMetricList2StandardSchemeFactory implements org.apache.storm.thrift.scheme.SchemeFactory {
    public WorkerMetricList2StandardScheme getScheme() {
      return new WorkerMetricList2StandardScheme();
    }
  }

  private static class WorkerMetricList2StandardScheme extends org.apache.storm.thrift.scheme.StandardScheme<WorkerMetricList2> {

    public void read(org.apache.storm.thrift.protocol.TProtocol iprot, WorkerMetricList2 struct) throws org.apache.storm.thrift.TException {
      org.apache.storm.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.storm.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // METRICS
            if (schemeField.type == org.apache.storm.thrift.protocol.TType.LIST) {
              {
                org.apache.storm.thrift.protocol.TList _list896 = iprot.readListBegin();
                struct.metrics = new java.util.ArrayList<WorkerMetricPoint2>(_list896.size);
                @org.apache.storm.thrift.annotation.Nullable WorkerMetricPoint2 _elem897;
                for (int _i898 = 0; _i898 < _list896.size; ++_i898)
                {
                  _elem897 = new WorkerMetricPoint2();
                  _elem897.read(iprot);
                  struct.metrics.add(_elem897);
                }
                iprot.readListEnd();
              }
              struct.set_metrics_isSet(true);
            } else { 
              org.apache.storm.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TIMESTAMP_MS
            if (schemeField.type == org.apache.storm.thrift.protocol.TType.I64) {
              struct.timestampMs = iprot.readI64();
              struct.set_timestampMs_isSet(true);
            } else { 
              org.apache.storm.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // COMPONENT_ID
            if (schemeField.type == org.apache.storm.thrift.protocol.TType.STRING) {
              struct.componentId = iprot.readString();
              struct.set_componentId_isSet(true);
            } else { 
              org.apache.storm.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EXECUTOR_ID
            if (schemeField.type == org.apache.storm.thrift.protocol.TType.STRING) {
              struct.executorId = iprot.readString();
              struct.set_executorId_isSet(true);
            } else { 
              org.apache.storm.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // EXTRA_CONTEXT_JSON
            if (schemeField.type == org.apache.storm.thrift.protocol.TType.STRING) {
              struct.extraContextJson = iprot.readString();
              struct.set_extraContextJson_isSet(true);
            } else { 
              org.apache.storm.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.storm.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.storm.thrift.protocol.TProtocol oprot, WorkerMetricList2 struct) throws org.apache.storm.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.metrics != null) {
        oprot.writeFieldBegin(METRICS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.storm.thrift.protocol.TList(org.apache.storm.thrift.protocol.TType.STRUCT, struct.metrics.size()));
          for (WorkerMetricPoint2 _iter899 : struct.metrics)
          {
            _iter899.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TIMESTAMP_MS_FIELD_DESC);
      oprot.writeI64(struct.timestampMs);
      oprot.writeFieldEnd();
      if (struct.componentId != null) {
        oprot.writeFieldBegin(COMPONENT_ID_FIELD_DESC);
        oprot.writeString(struct.componentId);
        oprot.writeFieldEnd();
      }
      if (struct.executorId != null) {
        oprot.writeFieldBegin(EXECUTOR_ID_FIELD_DESC);
        oprot.writeString(struct.executorId);
        oprot.writeFieldEnd();
      }
      if (struct.extraContextJson != null) {
        if (struct.is_set_extraContextJson()) {
          oprot.writeFieldBegin(EXTRA_CONTEXT_JSON_FIELD_DESC);
          oprot.writeString(struct.extraContextJson);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WorkerMetricList2TupleSchemeFactory implements org.apache.storm.thrift.scheme.SchemeFactory {
    public WorkerMetricList2TupleScheme getScheme() {
      return new WorkerMetricList2TupleScheme();
    }
  }

  private static class WorkerMetricList2TupleScheme extends org.apache.storm.thrift.scheme.TupleScheme<WorkerMetricList2> {

    @Override
    public void write(org.apache.storm.thrift.protocol.TProtocol prot, WorkerMetricList2 struct) throws org.apache.storm.thrift.TException {
      org.apache.storm.thrift.protocol.TTupleProtocol oprot = (org.apache.storm.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI64(struct.timestampMs);
      oprot.writeString(struct.componentId);
      oprot.writeString(struct.executorId);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.is_set_metrics()) {
        optionals.set(0);
      }
      if (struct.is_set_extraContextJson()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.is_set_metrics()) {
        {
          oprot.writeI32(struct.metrics.size());
          for (WorkerMetricPoint2 _iter900 : struct.metrics)
          {
            _iter900.write(oprot);
          }
        }
      }
      if (struct.is_set_extraContextJson()) {
        oprot.writeString(struct.extraContextJson);
      }
    }

    @Override
    public void read(org.apache.storm.thrift.protocol.TProtocol prot, WorkerMetricList2 struct) throws org.apache.storm.thrift.TException {
      org.apache.storm.thrift.protocol.TTupleProtocol iprot = (org.apache.storm.thrift.protocol.TTupleProtocol) prot;
      struct.timestampMs = iprot.readI64();
      struct.set_timestampMs_isSet(true);
      struct.componentId = iprot.readString();
      struct.set_componentId_isSet(true);
      struct.executorId = iprot.readString();
      struct.set_executorId_isSet(true);
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        {
          org.apache.storm.thrift.protocol.TList _list901 = new org.apache.storm.thrift.protocol.TList(org.apache.storm.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.metrics = new java.util.ArrayList<WorkerMetricPoint2>(_list901.size);
          @org.apache.storm.thrift.annotation.Nullable WorkerMetricPoint2 _elem902;
          for (int _i903 = 0; _i903 < _list901.size; ++_i903)
          {
            _elem902 = new WorkerMetricPoint2();
            _elem902.read(iprot);
            struct.metrics.add(_elem902);
          }
        }
        struct.set_metrics_isSet(true);
      }
      if (incoming.get(1)) {
        struct.extraContextJson = iprot.readString();
        struct.set_extraContextJson_isSet(true);
      }
    }
  }

  private static <S extends org.apache.storm.thrift.scheme.IScheme> S scheme(org.apache.storm.thrift.protocol.TProtocol proto) {
    return (org.apache.storm.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

